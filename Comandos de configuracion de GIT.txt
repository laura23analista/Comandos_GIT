Codigos de Git

Para crear ingresar y configurar el mail y el nombre los comandos son:

 git config -- global user.email "laurita23analista@gmail.com"

 git config -- global user.name "Laura"


Para ver si se creo correctamente utilizamos los comandos:

 git config -- global -e  

habre una pantalla la cual hay que cerrar para poder segir la configuracion 


Es para verificar si los datos fueron guardados 

git config --global -l

Nos lista la configuracion inicial 

 git config -- list

Para cambiar el nombre de usuraio o el mail solo volvemos a escribir el  mismo comando y se remplaza automaticamente 

git config -- global user.email "laurita23analista@gmail.com"

 git config -- global user.name "Laura"



Crear mi primer Repositorio 

para crear la primer carpeta el comando es 

mkdir y el nombre de la carpeta 

mkdir primerRepositorio

con el comando cd increso a la primer carpeta 


cd primerRepositorio


Crear archivos, los comandos son 


touch inicio.php

touch contacto.php

touch preguntas.php


CON LA TECLA CONTOL + L SE LIMPIA LA PANTALLA 


Para dar inicia al proceso se utiliza el comando 

git init 

Ya tenemos un repositorio local en la rama mastres de nuestro proyecto 

-------------------------

Hacer un COMMIT y modificarlo y eliminarlo 


Para veriificar si los archivos estan subidos a git y verificar sus cambios se utiliza el comando 

git status

si no estan subidos a git muestra la archivos en color rojo 


Para subir los archivos se utilizan los sig comandos 

git add (sube los archivos de 1 a la ves )


gid add . (sube todos los archivos juntos)

para verificar si se subieron los archivos es con el codigo 

git status 

una ves que los archivos estan creardos hay que enpaquetarlos en commit 

para crear el commit se utiliza el comando 

git commit -m "primerCommit" (el nombre del archivo)

muestra que los archivos creados ya estan empaquetados en la rama principal 


Ir al editor de texto Visual Studio Code

el cual se agrega al archivo inicio el comando 


para ver si se modifico en GIT utilizamos el comando 

git status 

para ver el archivo especifico que se modifico se utiliza el comando 


git diff
--------------------------------

COMO ELIMINAR UN ARCHIVO 

se coloca reset HEAD y el nombre del archivo a eliminar

git reset HEAD form.php 

verificar si se elimino con el comando 

git status

y lo muestra en rojo como que fue eliminado 


Como deshaser cambios en GIT

Crear otro commit 

git commit -m "segundoCommit"



------------------------------

Crear otro commit 

git commit -m "segundoCommit"


Para eliminar un cambio que realizamos en el archivo Inicio se utiliza el comando 

git checkout .


-------------

Como volver  una version especifica de commit 

Para volver al primir commit 

busco el idenftificador 

git checkout  07fe11caf33c91c8fcab972b66e08f2829bd4ca5
 
vuelve a la version que necesitamos 

----------

historial de cambios de GIT

git log = Muestra el historial de cambios de GIT

----

Para sincronizar REPOSITORIO  se utiliza el comando 


git remote add origin https://github.com/laura23analista/sincronizando.git


git push -u origin master


pull se utiliza para traer las actualizaciones que se manejan desde otros repositorios de un colaborador 

git pull origin master 


pull request 

ignorar carpeta 

con /comentarios/





untracked =
sin seguimiento

open change = 
cambio abiertogit


Index added = 
√çndice agregado

modified = modificado




<!DOCTYPE html>
<html lang="e">
<head>

   <meta charset="UTF-8">
  <meta name="viewport" content="width=divice-width",
initial-scaler1.0>
 <meta http-equiv="X-UA-Compatible"
content="ie=edge">
 <title>Document</title>

</head>
</body>

</body>
</html>











<!DOCTYPE html>
<html lang="e">
<head>

   <meta charset="UTF-8">
  <meta name="viewport" content="width=divice-width",
initial-scaler1.0>
 <meta http-equiv="X-UA-Compatible"
content="ie=edge">
 <title>Document</title>

</head>
</body>

  <?php
 echo "Hola GIT";
 ?>

</body>
</html>





















































